Project1_DFTU
=============

Project #1: DFT+U Universal Input File Generation Scheme for Quantum Espresso v.5.0.1

Universal Generator, Calculator and Analyzer for the Self-Consistent DFT+U Linear Response Method Applied to Bulk Periodic Structures (UGCA in DFT+U)

Note: This org-mode structured Python code - which aspires to automate the input file generation, linear response calculation, and Hubbard U parameter determination required by the self-consistent extension of the linear response approach to DFT+U calculations - is designed to be used in conjunction with the self-consistent plane wave calculation program (PWscf, or pw.x) employed by the Quantum Espresso (QE) software package. All development and testing of this code was performed using version 5.0.1 of Quantum Espresso, though the version implemented in this development process was modified solely to allow the inclusion of more cations - namely La (modeled as a d^1 metal due to pseudopotential availability), Sr, K, and Sc - in these calculations. Detailed information relating to the input parameters introduced in these calculations can be found (as of 11/3/12) at: http://www.quantum-espresso.org/wp-content/uploads/Doc/INPUT_PW.html

In particular, the current code implemented here addresses the first issue mentioned above, namely that of input file generation. Given a set of slightly modified .xyz files, the specification of input parameters inherently required by Quantum Espresso itself, and - most importantly - the specification of the different types of atoms in a system and number of "states" represented by those atoms (the last requirement is specified entirely in the user-entered dictionary atoms_typ), this code completely automates the process of generating input and runscript files pursuant to the calculation of self-consistent Hubbard U parameters. In addition, it is also capable of selectively running these files on a computational cluster.

Specific instructions on the use of this code are extensive and are thus completely covered in the initial input entry section of the code contained in the org-mode file DFTU_LinRESP_aggregator.org. A small set of shortcomings has developed in the creation of this code; they are:

1. Consistent with the self-consistent DFT+U method, only one Hubbard U parameter (i.e.: on a single atomic species) can be incremented for the linear regression approach. The first atomic species listed in the atoms_typ dictionary and the input files is the only atomic species that can be assigned that Hubbard U value easily. A manual procedure for assigning constant U parameter values has been developed in the code to partially remedy this issue, though it is much less convenient that the automated procedure that assigns U values to particular atomic species. However, the manual procedure is very useful for certain systems, such as LaBO3 with both 3d (B-site) and 4f (La) orbital corrections, in which self-consistent U(3d) are desired for a constant value of U(4f).

2. The modeling of different 'states' of the same atomic species, which distinguish between distinct atoms that can belong to the same or different atomic species, is limited to accounting for different magnetic states of the same atomic species (e.g.: spin-up and spin-down Ni in AFM NiO) and atomic perturbation itself (as seen in the code, in order to linearly perturb the orbitals of a particular atomic species, a single atom must be perturbed and distinguished from all other atoms with respect to the pseudopotential describing it). Other possible reasons for distinguishing atoms of the same species are not accounted for in this code.

Two examples addressing the application of this code are in the folders example_NiO and example_LaCoO3. They focus on a 2x2x2 BCC supercell representation of an AFM NiO system (reproducing the results of Cococcioni's tutorial at http://media.quantum-espresso.org/santa_barbara_2009_07/slides-exercices/Handson_ldau.pdf) and a 1x1x1 R-3c unit cell representation of a FM LaCoO3 system (initial structural information taken from the ground state LaCoO3 structure found on www.materialsproject.org).
